org.geoserver.security.GeoServerAuthenticationKeyFilter.name=AuthSchlüssel
org.geoserver.security.GeoServerAuthenticationKeyFilter.title=Erkennung mit einem Schlüssel


AuthenticationKeyFilterPanel.short=AuthSchlüssel
AuthenticationKeyFilterPanel.title=Erkennungs Schlüssel
AuthenticationKeyFilterPanel.description=Authentifizierung durch Anfrage nach einem Authentifizierungsschlüssel übermittelt als URL Parameter

AuthenticationKeyFilterPanel.authKeyParamName=Name des URL Parameters
AuthenticationKeyFilterPanel.authKeyMapperName=Zuordnung von Authentifizierungsschlüsseln zu Benutzern
AuthenticationKeyFilterPanel.userGroupService=Benutzer/Gruppen Service

AuthenticationKeyFilterPanel.propertyMapper=Property Datei
AuthenticationKeyFilterPanel.userPropertyMapper=Eigenschaften zum Benutzer
AuthenticationKeyFilterPanel.webServiceMapper=Webdienst


AuthenticationKeyFilterPanel.authKeyParameters=Authentifizierungsschlüssel
AuthenticationKeyFilterPanel.authKeyParametersHelp.title=Authentifizierungsschlüssel
AuthenticationKeyFilterPanel.authKeyParametersHelp=<p>Der Authentifizierungsschlüssel wird als URL Parameter übermittelt.</p><p>Beispiel\: <strong>http\://my.geoserver.org/geoserver/web&authkey\=favdsfd</strong></p><p>Die Zuordnungsdatei <strong>authkeys.properties</strong> wird verwendet, um die Pärchen von Schlüsseln zu Benutzern abzulegen.</p><p>Bei der Benutzer-Eigenschaftenzuordnung wird der Schlüssel als Benutzereigenschaft in Benutzer-/Gruppenservice abgelegt.</p><p>Drücken Sie <strong>Synchronisieren</strong> und die Konfiguration wird gespeichert und um fehlende Schlüssel für neue Benutzer ergänzt.</p>

AuthenticationKeyFilterPanel.synchronizeSuccessful=Erfolgreich Synchronisiert, {0} Schlüssel wurden hinzugefügt
AuthenticationKeyFilterPanel.synchronize=Synchronisiere Benutzer/Gruppen Service

AuthenticationKeyFilterPanel.webServiceMapper.readTimeout=Lese-Zeitüberschreitung
AuthenticationKeyFilterPanel.webServiceMapper.connectTimeout=Verbindungszeitüberschreitung
AuthenticationKeyFilterPanel.webServiceMapper.searchUser=regulärer Ausdruck für die Suche von Anwendern über den Webservice
AuthenticationKeyFilterPanel.webServiceMapper.webServiceUrl=Webservice URL mit Platzhalter für den Schlüssel
# AuthenticationKeyFilterPanel.fakeMapper=fakeMapper

# user group services
# org.geoserver.security.WebServiceBodyResponseUserGroupService.name=AuthKEY WebService Body Response
# org.geoserver.security.WebServiceBodyResponseUserGroupService.title=AuthKEY WebService Body Response UserGroup Service

# WebServiceBodyResponseUserGroupServicePanel.short=AuthKEY WebService Body Response
# WebServiceBodyResponseUserGroupServicePanel.title=AuthKEY WebService Body Response UserGroup Service
# WebServiceBodyResponseUserGroupServicePanel.description=User group service from WebService Response Body

# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParameters=AuthKEY WebService Body Response
# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp.title=AuthKEY WebService Body Response UserGroup Service
# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp=<p>This Service looks for user roles inside the WebService Response Body. This is meant to be used along with <strong>AuthKey WebService Authentication</strong>.</p><p>Example Regex for Roles could be: <strong>^.*?"roles"\s*:\s*"([^"]+)".*$</strong></p><p><pre>{"roles": "ROLE_1, ROLE_2, ROLE_3"}</pre></p><p>Optionally it is possible to list the <strong>groups</strong> that the WebService could server: <pre>GROUP_ROLE_1, GROUP_ROLE_2, GROUP_ROLE_3</pre></p><p></p>

# WebServiceBodyResponseUserGroupServicePanel.searchRoles=Web Service Response Roles Search Regular Expression
# WebServiceBodyResponseUserGroupServicePanel.availableGroups=Optional static comma-separated list of available Groups from the Web Service response
# WebServiceBodyResponseUserGroupServicePanel.roleServiceName=Role Service to use (empty value means: use the current Active Role Service)

# role services
# org.geoserver.security.GeoServerRestRoleService.name=AuthKEY REST
# org.geoserver.security.GeoServerRestRoleService.title=AuthKEY REST Role Service

# GeoServerRestRoleServicePanel.short=AuthKEY REST
# GeoServerRestRoleServicePanel.title=AuthKEY REST Role Service
# GeoServerRestRoleServicePanel.description=Role service from REST endpoint

# GeoServerRestRoleServicePanel.restRoleSettings=REST Role Service Settings
# GeoServerRestRoleServicePanel.baseUrl=Base Server URL
# GeoServerRestRoleServicePanel.rolesRESTEndpoint=Roles REST Endpoint
# GeoServerRestRoleServicePanel.adminRoleRESTEndpoint=Admin Role REST Endpoint
# GeoServerRestRoleServicePanel.usersRESTEndpoint=Users REST Endpoint
# GeoServerRestRoleServicePanel.rolesJSONPath=Roles JSON Path
# GeoServerRestRoleServicePanel.adminRoleJSONPath=Admin Role JSON Path
# GeoServerRestRoleServicePanel.usersJSONPath=Users JSON Path
# GeoServerRestRoleServicePanel.cacheConcurrencyLevel=REST Rules Cache Concurrency Level
# GeoServerRestRoleServicePanel.cacheMaximumSize=REST Rules Cache Maximum Size (# keys)
# GeoServerRestRoleServicePanel.cacheExpirationTime=REST Rules Cache Expiration Time (ms)
# GeoServerRestRoleServicePanel.authApiKey=REST Api Key (optional)
