org.geoserver.security.GeoServerAuthenticationKeyFilter.name=AuthKey
org.geoserver.security.GeoServerAuthenticationKeyFilter.title=Autenticação usando uma Chave


AuthenticationKeyFilterPanel.short=AuthKey
AuthenticationKeyFilterPanel.title=Chave de Autenticação
AuthenticationKeyFilterPanel.description=Autenticar utilizando uma uma Chave enviada em parâmetros através de URL

AuthenticationKeyFilterPanel.authKeyParamName=Nome do parâmetro da URL
AuthenticationKeyFilterPanel.authKeyMapperName=Chave de Autenticação para mapear usuário
AuthenticationKeyFilterPanel.userGroupService=Serviço de Usuário/Grupo

AuthenticationKeyFilterPanel.propertyMapper=Arquivo de propriedade
AuthenticationKeyFilterPanel.userPropertyMapper=Propriedade de Usuário
AuthenticationKeyFilterPanel.webServiceMapper=Web Service


AuthenticationKeyFilterPanel.authKeyParameters=Autenticação com Chave de Autenticação
AuthenticationKeyFilterPanel.authKeyParametersHelp.title=Autenticação com Chave de Autenticação
AuthenticationKeyFilterPanel.authKeyParametersHelp=<p>A chave de autenticação é enviada através de um parâmetro da URL.</p><p>Exemplo\: <strong>http\://my.geoserver.org/geoserver/web&authkey\=favdsfd</strong></p><p>O arquivo de propriedade de mapeamento utiliza um arquivo<strong>authkeys.properties</strong> para armazenar a chave do usuário.</p><p>A propriedade de mapeamento do usuário armazena a chave como uma propriedade do usuário no serviço de usuário/grupo.</p><p>Pressionando o botão de <strong>Sincronizar</strong> salva as configurações e adiciona as novas chaves para um novo usuário.</p>

AuthenticationKeyFilterPanel.synchronizeSuccessful=Sincronizado com sucesso ao adicionar {0} chaves
AuthenticationKeyFilterPanel.synchronize=Sincronizar serviço de usuário/grupo

# AuthenticationKeyFilterPanel.webServiceMapper.readTimeout=Read Timeout
# AuthenticationKeyFilterPanel.webServiceMapper.connectTimeout=Connection Timeout
# AuthenticationKeyFilterPanel.webServiceMapper.searchUser=Web Service Response User Search Regular Expression
# AuthenticationKeyFilterPanel.webServiceMapper.webServiceUrl=Web Service URL, with key placeholder
# AuthenticationKeyFilterPanel.fakeMapper=fakeMapper

# user group services
# org.geoserver.security.WebServiceBodyResponseUserGroupService.name=AuthKEY WebService Body Response
# org.geoserver.security.WebServiceBodyResponseUserGroupService.title=AuthKEY WebService Body Response UserGroup Service

# WebServiceBodyResponseUserGroupServicePanel.short=AuthKEY WebService Body Response
# WebServiceBodyResponseUserGroupServicePanel.title=AuthKEY WebService Body Response UserGroup Service
# WebServiceBodyResponseUserGroupServicePanel.description=User group service from WebService Response Body

# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParameters=AuthKEY WebService Body Response
# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp.title=AuthKEY WebService Body Response UserGroup Service
# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp=<p>This Service looks for user roles inside the WebService Response Body. This is meant to be used along with <strong>AuthKey WebService Authentication</strong>.</p><p>Example Regex for Roles could be: <strong>^.*?"roles"\s*:\s*"([^"]+)".*$</strong></p><p><pre>{"roles": "ROLE_1, ROLE_2, ROLE_3"}</pre></p><p>Optionally it is possible to list the <strong>groups</strong> that the WebService could server: <pre>GROUP_ROLE_1, GROUP_ROLE_2, GROUP_ROLE_3</pre></p><p></p>

# WebServiceBodyResponseUserGroupServicePanel.searchRoles=Web Service Response Roles Search Regular Expression
# WebServiceBodyResponseUserGroupServicePanel.availableGroups=Optional static comma-separated list of available Groups from the Web Service response
# WebServiceBodyResponseUserGroupServicePanel.roleServiceName=Role Service to use (empty value means: use the current Active Role Service)

# role services
# org.geoserver.security.GeoServerRestRoleService.name=AuthKEY REST
# org.geoserver.security.GeoServerRestRoleService.title=AuthKEY REST Role Service

# GeoServerRestRoleServicePanel.short=AuthKEY REST
# GeoServerRestRoleServicePanel.title=AuthKEY REST Role Service
# GeoServerRestRoleServicePanel.description=Role service from REST endpoint

# GeoServerRestRoleServicePanel.restRoleSettings=REST Role Service Settings
# GeoServerRestRoleServicePanel.baseUrl=Base Server URL
# GeoServerRestRoleServicePanel.rolesRESTEndpoint=Roles REST Endpoint
# GeoServerRestRoleServicePanel.adminRoleRESTEndpoint=Admin Role REST Endpoint
# GeoServerRestRoleServicePanel.usersRESTEndpoint=Users REST Endpoint
# GeoServerRestRoleServicePanel.rolesJSONPath=Roles JSON Path
# GeoServerRestRoleServicePanel.adminRoleJSONPath=Admin Role JSON Path
# GeoServerRestRoleServicePanel.usersJSONPath=Users JSON Path
# GeoServerRestRoleServicePanel.cacheConcurrencyLevel=REST Rules Cache Concurrency Level
# GeoServerRestRoleServicePanel.cacheMaximumSize=REST Rules Cache Maximum Size (# keys)
# GeoServerRestRoleServicePanel.cacheExpirationTime=REST Rules Cache Expiration Time (ms)
# GeoServerRestRoleServicePanel.authApiKey=REST Api Key (optional)
