org.geoserver.security.GeoServerAuthenticationKeyFilter.name=AuthKey
org.geoserver.security.GeoServerAuthenticationKeyFilter.title=Autentificare folosind o cheie


AuthenticationKeyFilterPanel.short=AuthKey
AuthenticationKeyFilterPanel.title=Cheie de autentificare
AuthenticationKeyFilterPanel.description=Autentific\u0103 prin c\u0103utarea unei chei de autentificare trimis\u0103 ca parametru URL

AuthenticationKeyFilterPanel.authKeyParamName=Numele parametrului URL
AuthenticationKeyFilterPanel.authKeyMapperName=Cheia de autentificare pentru configuratorul utilizatorului
AuthenticationKeyFilterPanel.userGroupService=Serviciul utilizatorului/grupului

AuthenticationKeyFilterPanel.propertyMapper=Fi\u0219ier de propriet\u0103\u021bi
AuthenticationKeyFilterPanel.userPropertyMapper=Propriet\u0103\u021bi utilizator
# AuthenticationKeyFilterPanel.webServiceMapper=Web Service


AuthenticationKeyFilterPanel.authKeyParameters=Autentificare cheie de autentificare
AuthenticationKeyFilterPanel.authKeyParametersHelp.title=Autentificare cheie de autentificare
AuthenticationKeyFilterPanel.authKeyParametersHelp=<p>Cheia de autentificare este trimis\u0103 folosind un parametru URL.</p><p>Exemplu\: <strong>http\://my.geoserver.org/geoserver/web&authkey\=favdsfd</strong></p><p>Configuratorul fi\u0219ierului de propriet\u0103\u021bi utilizeaz\u0103 un fi\u0219ier <strong>authkeys.properties</strong> pentru stocarea cheilor asociate de c\u0103tre utilizator.</p><p>Configuratorul propriet\u0103\u021bilor utilizatorului stocheaz\u0103 cheia ca pe o proprietate personalizat\u0103 în serviciul utilizatorului/groupului.</p><p>Ap\u0103sând butonul <strong>Sincronizeaz\u0103</strong> se salveaz\u0103 configurarea \u0219i se adaug\u0103 cheile lips\u0103 pentru noii utilizatori.</p>

AuthenticationKeyFilterPanel.synchronizeSuccessful=Sincronizare cu succes prin ad\u0103ugarea cheii {0}
AuthenticationKeyFilterPanel.synchronize=Sincronizare serviciu utilizator/grup

# AuthenticationKeyFilterPanel.webServiceMapper.readTimeout=Read Timeout
# AuthenticationKeyFilterPanel.webServiceMapper.connectTimeout=Connection Timeout
# AuthenticationKeyFilterPanel.webServiceMapper.searchUser=Web Service Response User Search Regular Expression
# AuthenticationKeyFilterPanel.webServiceMapper.webServiceUrl=Web Service URL, with key placeholder
AuthenticationKeyFilterPanel.fakeMapper=fakeMapper

# user group services
# org.geoserver.security.WebServiceBodyResponseUserGroupService.name=AuthKEY WebService Body Response
# org.geoserver.security.WebServiceBodyResponseUserGroupService.title=AuthKEY WebService Body Response UserGroup Service

# WebServiceBodyResponseUserGroupServicePanel.short=AuthKEY WebService Body Response
# WebServiceBodyResponseUserGroupServicePanel.title=AuthKEY WebService Body Response UserGroup Service
# WebServiceBodyResponseUserGroupServicePanel.description=User group service from WebService Response Body

# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParameters=AuthKEY WebService Body Response
# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp.title=AuthKEY WebService Body Response UserGroup Service
# WebServiceBodyResponseUserGroupServicePanel.webServiceBodyResponseUserGroupParametersHelp=<p>This Service looks for user roles inside the WebService Response Body. This is meant to be used along with <strong>AuthKey WebService Authentication</strong>.</p><p>Example Regex for Roles could be: <strong>^.*?"roles"\s*:\s*"([^"]+)".*$</strong></p><p><pre>{"roles": "ROLE_1, ROLE_2, ROLE_3"}</pre></p><p>Optionally it is possible to list the <strong>groups</strong> that the WebService could server: <pre>GROUP_ROLE_1, GROUP_ROLE_2, GROUP_ROLE_3</pre></p><p></p>

# WebServiceBodyResponseUserGroupServicePanel.searchRoles=Web Service Response Roles Search Regular Expression
# WebServiceBodyResponseUserGroupServicePanel.availableGroups=Optional static comma-separated list of available Groups from the Web Service response
# WebServiceBodyResponseUserGroupServicePanel.roleServiceName=Role Service to use (empty value means: use the current Active Role Service)

# role services
org.geoserver.security.GeoServerRestRoleService.name=AuthKEY REST
# org.geoserver.security.GeoServerRestRoleService.title=AuthKEY REST Role Service

GeoServerRestRoleServicePanel.short=AuthKEY REST
# GeoServerRestRoleServicePanel.title=AuthKEY REST Role Service
# GeoServerRestRoleServicePanel.description=Role service from REST endpoint

# GeoServerRestRoleServicePanel.restRoleSettings=REST Role Service Settings
# GeoServerRestRoleServicePanel.baseUrl=Base Server URL
# GeoServerRestRoleServicePanel.rolesRESTEndpoint=Roles REST Endpoint
# GeoServerRestRoleServicePanel.adminRoleRESTEndpoint=Admin Role REST Endpoint
# GeoServerRestRoleServicePanel.usersRESTEndpoint=Users REST Endpoint
# GeoServerRestRoleServicePanel.rolesJSONPath=Roles JSON Path
# GeoServerRestRoleServicePanel.adminRoleJSONPath=Admin Role JSON Path
# GeoServerRestRoleServicePanel.usersJSONPath=Users JSON Path
# GeoServerRestRoleServicePanel.cacheConcurrencyLevel=REST Rules Cache Concurrency Level
# GeoServerRestRoleServicePanel.cacheMaximumSize=REST Rules Cache Maximum Size (# keys)
# GeoServerRestRoleServicePanel.cacheExpirationTime=REST Rules Cache Expiration Time (ms)
# GeoServerRestRoleServicePanel.authApiKey=REST Api Key (optional)
